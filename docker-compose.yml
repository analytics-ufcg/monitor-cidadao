version: '3.5'

services:

  fetcher:
    build:
      context: fetcher/
    container_name: fetcher
    restart: always
    environment:
      - USER=${USER:-admin}
      - PASSWORD=${PASSWORD:-secret}
      - SQLSERVER_SAGRES19_HOST=${SQLSERVER_SAGRES19_HOST:-host}
      - SQLSERVER_SAGRES19_Database=${SQLSERVER_SAGRES19_Database:-db}
      - SQLSERVER_SAGRES19_PORT=${SQLSERVER_SAGRES19_PORT:-1401}
      - SQLSERVER_SAGRES19_USER=${SQLSERVER_SAGRES19_USER:-user}
      - SQLSERVER_SAGRES19_PASS=${SQLSERVER_SAGRES19_PASS:-secret}
    volumes:
      - ./fetcher:/app/fetcher
    ports:
      - 8787:8787
    networks:
      - proxynet

  transformer:
    build:
      context: transformador/
    container_name: transformador
    restart: always
    environment:
      - USER=${USER:-admin}
      - PASSWORD=${PASSWORD:-secret}
    volumes:
      - ./transformador:/app/transformador
      - ./fetcher/data:/app/fetcher/data
    networks:
      - proxynet

  feed-al:
    build:
      context: feed-al/
    container_name: feed-al
    env_file:
      - .env
    volumes:
      - ./transformador/data:/data
      - ./feed-al:/feed-al
    ports:
      - 7643:7643
    depends_on:
      - postgres-aldb
      - postgres-mcdb
    networks:
      - proxynet

  feed-mc:
    build:
      context: feed-mc/
    container_name: feed-mc
    env_file:
      - .env
    volumes:
      - ./tipologias/data:/data
      - ./feed-mc:/feed-mc
    ports:
      - 7644:7644
    depends_on:
      - postgres-aldb
      - postgres-mcdb
    networks:
      - proxynet

  postgres-aldb:
    image: postgres:11.1-alpine
    container_name: postgres-analytics
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-al_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
      - TZ=GMT
    volumes:
      - postgres_aldb_data:/var/lib/postgresql/data/
      # - /mnt/datalake/postgres-aldb:/var/lib/postgresql/data/
    ports:
      - 7655:5432
    networks:
      - proxynet

  postgres-mcdb:
    image: postgres:11.1-alpine
    container_name: postgres-monitor-cidadao
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_MC_DB:-mc_db}
      - POSTGRES_USER=${POSTGRES_MC_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_MC_PASSWORD:-secret}
      - TZ=GMT
    volumes:
      - postgres_mcdb_data:/var/lib/postgresql/data/
      # - /mnt/datalake/postgres-mcdb:/var/lib/postgresql/data/
    ports:
      - 7656:5432
    networks:
      - proxynet

  tipologias:
    build:
      context: tipologias/
    container_name: tipologias
    restart: always
    environment:
      - USER=${USER:-admin}
      - PASSWORD=${PASSWORD:-secret}
      - POSTGRES_HOST=${POSTGRES_HOST:-host}
      - POSTGRES_DB=${POSTGRES_DB:-al_db}
      - POSTGRES_PORT=${POSTGRES_PORT:-7655}
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-secret}
    volumes:
      - ./tipologias:/app/tipologias
    ports:
      - 9090:9090
    networks:
      - proxynet

networks:
  proxynet:
    name: monitor_cidadao_network

volumes:
  postgres_aldb_data:
  postgres_mcdb_data: